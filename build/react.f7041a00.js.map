{"version":3,"sources":["js/react.js"],"names":["filterDataByCommunityArea","selectedOptions","reactdata","data","filter","item","option0","city","option1","neighborhood","community_area","ward"],"mappings":";AACA,SAASA,EAA0BC,EAAiBC,GAElD,GAAiB,MAAbA,EACA,MAAO,GAIMC,KAAKC,OAAO,SAAAC,GAI3B,OAAQJ,EAAgBK,SACtB,IAAK,OACH,OAAOD,EAAKE,OAASN,EAAgBO,QACvC,IAAK,eACH,OAAOH,EAAKI,eAAiBR,EAAgBO,QAC/C,IAAK,iBACH,OAAOH,EAAKK,iBAAmBT,EAAgBO,QACjD,IAAK,OACH,OAAOH,EAAKM,OAASV,EAAgBO,QAEvC,QAEE,OAAO,KAKb,OAAON","file":"react.f7041a00.js","sourceRoot":"..","sourcesContent":["// Define the filterDataByCommunityArea function\nfunction filterDataByCommunityArea(selectedOptions, reactdata) {\n  // Check if data is null or undefined before filtering\n  if (reactdata == null) {\n      return [];\n  }\n  \n  // Use the Array.prototype.filter() method to filter the data\n  const new_data = data.filter(item => {\n    // Log the value of item.community_area\n\n    // Check the value of table_content.option0\n    switch (selectedOptions.option0) {\n      case 'city':\n        return item.city === selectedOptions.option1;\n      case 'neighborhood':\n        return item.neighborhood === selectedOptions.option1;\n      case 'community_area':\n        return item.community_area === selectedOptions.option1;\n      case 'ward':\n        return item.ward === selectedOptions.option1;\n      // Add more cases for other options if needed\n      default:\n        // If option0 doesn't match any cases, return true (no filtering)\n        return true;\n    }\n  });\n\n  // Return the filtered data\n  return reactdata;\n}\n"]}